// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// EburyAssociationAttributes ebury association attributes
// swagger:model EburyAssociationAttributes
type EburyAssociationAttributes struct {

	// ebury client id
	// Required: true
	EburyClientID *string `json:"ebury_client_id"`

	// ebury contact id
	// Required: true
	EburyContactID *string `json:"ebury_contact_id"`

	// funding currency
	// Required: true
	FundingCurrency *string `json:"funding_currency"`

	// organisation location
	// Required: true
	OrganisationLocation *string `json:"organisation_location"`
}

// Validate validates this ebury association attributes
func (m *EburyAssociationAttributes) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateEburyClientID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateEburyContactID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateFundingCurrency(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateOrganisationLocation(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *EburyAssociationAttributes) validateEburyClientID(formats strfmt.Registry) error {

	if err := validate.Required("ebury_client_id", "body", m.EburyClientID); err != nil {
		return err
	}

	return nil
}

func (m *EburyAssociationAttributes) validateEburyContactID(formats strfmt.Registry) error {

	if err := validate.Required("ebury_contact_id", "body", m.EburyContactID); err != nil {
		return err
	}

	return nil
}

func (m *EburyAssociationAttributes) validateFundingCurrency(formats strfmt.Registry) error {

	if err := validate.Required("funding_currency", "body", m.FundingCurrency); err != nil {
		return err
	}

	return nil
}

func (m *EburyAssociationAttributes) validateOrganisationLocation(formats strfmt.Registry) error {

	if err := validate.Required("organisation_location", "body", m.OrganisationLocation); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *EburyAssociationAttributes) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *EburyAssociationAttributes) UnmarshalBinary(b []byte) error {
	var res EburyAssociationAttributes
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
