// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// EburyAssociationAccountPatchAttributes ebury association account patch attributes
//
// swagger:model EburyAssociationAccountPatchAttributes
type EburyAssociationAccountPatchAttributes struct {

	// account labels
	AccountLabels []string `json:"account_labels"`

	// account number
	AccountNumber *string `json:"account_number,omitempty"`

	// account number code
	AccountNumberCode *string `json:"account_number_code,omitempty"`

	// account with
	AccountWith *EburyAssociationAccountPatchAttributesAccountWith `json:"account_with,omitempty"`

	// country
	Country *string `json:"country,omitempty"`

	// currency
	Currency *string `json:"currency,omitempty"`

	// iban
	Iban *string `json:"iban,omitempty"`
}

// Validate validates this ebury association account patch attributes
func (m *EburyAssociationAccountPatchAttributes) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAccountWith(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *EburyAssociationAccountPatchAttributes) validateAccountWith(formats strfmt.Registry) error {

	if swag.IsZero(m.AccountWith) { // not required
		return nil
	}

	if m.AccountWith != nil {
		if err := m.AccountWith.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("account_with")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *EburyAssociationAccountPatchAttributes) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *EburyAssociationAccountPatchAttributes) UnmarshalBinary(b []byte) error {
	var res EburyAssociationAccountPatchAttributes
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// EburyAssociationAccountPatchAttributesAccountWith ebury association account patch attributes account with
//
// swagger:model EburyAssociationAccountPatchAttributesAccountWith
type EburyAssociationAccountPatchAttributesAccountWith struct {

	// bank id
	BankID *string `json:"bank_id,omitempty"`

	// bank id code
	BankIDCode *string `json:"bank_id_code,omitempty"`

	// bic
	Bic *string `json:"bic,omitempty"`
}

// Validate validates this ebury association account patch attributes account with
func (m *EburyAssociationAccountPatchAttributesAccountWith) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *EburyAssociationAccountPatchAttributesAccountWith) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *EburyAssociationAccountPatchAttributesAccountWith) UnmarshalBinary(b []byte) error {
	var res EburyAssociationAccountPatchAttributesAccountWith
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
