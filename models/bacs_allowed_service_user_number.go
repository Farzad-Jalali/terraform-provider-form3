// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// BacsAllowedServiceUserNumber bacs allowed service user number
//
// swagger:model BacsAllowedServiceUserNumber
type BacsAllowedServiceUserNumber struct {

	// service user number
	// Pattern: ^[0-9A-Z]{6}$
	ServiceUserNumber string `json:"service_user_number,omitempty"`

	// sorting code
	// Pattern: ^[0-9]{6}$
	SortingCode string `json:"sorting_code,omitempty"`
}

// Validate validates this bacs allowed service user number
func (m *BacsAllowedServiceUserNumber) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateServiceUserNumber(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSortingCode(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *BacsAllowedServiceUserNumber) validateServiceUserNumber(formats strfmt.Registry) error {

	if swag.IsZero(m.ServiceUserNumber) { // not required
		return nil
	}

	if err := validate.Pattern("service_user_number", "body", string(m.ServiceUserNumber), `^[0-9A-Z]{6}$`); err != nil {
		return err
	}

	return nil
}

func (m *BacsAllowedServiceUserNumber) validateSortingCode(formats strfmt.Registry) error {

	if swag.IsZero(m.SortingCode) { // not required
		return nil
	}

	if err := validate.Pattern("sorting_code", "body", string(m.SortingCode), `^[0-9]{6}$`); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *BacsAllowedServiceUserNumber) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *BacsAllowedServiceUserNumber) UnmarshalBinary(b []byte) error {
	var res BacsAllowedServiceUserNumber
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
