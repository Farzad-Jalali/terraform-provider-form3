// Code generated by go-swagger; DO NOT EDIT.

package organisations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/ewilde/go-form3/models"
)

// NewPatchOrganisationsIDParams creates a new PatchOrganisationsIDParams object
// with the default values initialized.
func NewPatchOrganisationsIDParams() *PatchOrganisationsIDParams {
	var ()
	return &PatchOrganisationsIDParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewPatchOrganisationsIDParamsWithTimeout creates a new PatchOrganisationsIDParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewPatchOrganisationsIDParamsWithTimeout(timeout time.Duration) *PatchOrganisationsIDParams {
	var ()
	return &PatchOrganisationsIDParams{

		timeout: timeout,
	}
}

// NewPatchOrganisationsIDParamsWithContext creates a new PatchOrganisationsIDParams object
// with the default values initialized, and the ability to set a context for a request
func NewPatchOrganisationsIDParamsWithContext(ctx context.Context) *PatchOrganisationsIDParams {
	var ()
	return &PatchOrganisationsIDParams{

		Context: ctx,
	}
}

// NewPatchOrganisationsIDParamsWithHTTPClient creates a new PatchOrganisationsIDParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewPatchOrganisationsIDParamsWithHTTPClient(client *http.Client) *PatchOrganisationsIDParams {
	var ()
	return &PatchOrganisationsIDParams{
		HTTPClient: client,
	}
}

/*PatchOrganisationsIDParams contains all the parameters to send to the API endpoint
for the patch organisations ID operation typically these are written to a http.Request
*/
type PatchOrganisationsIDParams struct {

	/*OrganisationUpdateRequest*/
	OrganisationUpdateRequest *models.OrganisationUpdate
	/*ID
	  Organisation Id

	*/
	ID strfmt.UUID

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the patch organisations ID params
func (o *PatchOrganisationsIDParams) WithTimeout(timeout time.Duration) *PatchOrganisationsIDParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the patch organisations ID params
func (o *PatchOrganisationsIDParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the patch organisations ID params
func (o *PatchOrganisationsIDParams) WithContext(ctx context.Context) *PatchOrganisationsIDParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the patch organisations ID params
func (o *PatchOrganisationsIDParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the patch organisations ID params
func (o *PatchOrganisationsIDParams) WithHTTPClient(client *http.Client) *PatchOrganisationsIDParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the patch organisations ID params
func (o *PatchOrganisationsIDParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithOrganisationUpdateRequest adds the organisationUpdateRequest to the patch organisations ID params
func (o *PatchOrganisationsIDParams) WithOrganisationUpdateRequest(organisationUpdateRequest *models.OrganisationUpdate) *PatchOrganisationsIDParams {
	o.SetOrganisationUpdateRequest(organisationUpdateRequest)
	return o
}

// SetOrganisationUpdateRequest adds the organisationUpdateRequest to the patch organisations ID params
func (o *PatchOrganisationsIDParams) SetOrganisationUpdateRequest(organisationUpdateRequest *models.OrganisationUpdate) {
	o.OrganisationUpdateRequest = organisationUpdateRequest
}

// WithID adds the id to the patch organisations ID params
func (o *PatchOrganisationsIDParams) WithID(id strfmt.UUID) *PatchOrganisationsIDParams {
	o.SetID(id)
	return o
}

// SetID adds the id to the patch organisations ID params
func (o *PatchOrganisationsIDParams) SetID(id strfmt.UUID) {
	o.ID = id
}

// WriteToRequest writes these params to a swagger request
func (o *PatchOrganisationsIDParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.OrganisationUpdateRequest == nil {
		o.OrganisationUpdateRequest = new(models.OrganisationUpdate)
	}

	if err := r.SetBodyParam(o.OrganisationUpdateRequest); err != nil {
		return err
	}

	// path param id
	if err := r.SetPathParam("id", o.ID.String()); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
