// Code generated by go-swagger; DO NOT EDIT.

package users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/form3tech-oss/terraform-provider-form3/models"
)

// GetUsersUserIDCredentialsSsoUsernameReader is a Reader for the GetUsersUserIDCredentialsSsoUsername structure.
type GetUsersUserIDCredentialsSsoUsernameReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetUsersUserIDCredentialsSsoUsernameReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetUsersUserIDCredentialsSsoUsernameOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetUsersUserIDCredentialsSsoUsernameBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetUsersUserIDCredentialsSsoUsernameUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetUsersUserIDCredentialsSsoUsernameForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetUsersUserIDCredentialsSsoUsernameNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewGetUsersUserIDCredentialsSsoUsernameConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetUsersUserIDCredentialsSsoUsernameTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetUsersUserIDCredentialsSsoUsernameInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetUsersUserIDCredentialsSsoUsernameServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetUsersUserIDCredentialsSsoUsernameOK creates a GetUsersUserIDCredentialsSsoUsernameOK with default headers values
func NewGetUsersUserIDCredentialsSsoUsernameOK() *GetUsersUserIDCredentialsSsoUsernameOK {
	return &GetUsersUserIDCredentialsSsoUsernameOK{}
}

/*GetUsersUserIDCredentialsSsoUsernameOK handles this case with default header values.

Sso user data
*/
type GetUsersUserIDCredentialsSsoUsernameOK struct {
	Payload *models.SsoUserDetailsResponse
}

func (o *GetUsersUserIDCredentialsSsoUsernameOK) Error() string {
	return fmt.Sprintf("[GET /users/{user_id}/credentials/sso/{username}][%d] getUsersUserIdCredentialsSsoUsernameOK  %+v", 200, o.Payload)
}

func (o *GetUsersUserIDCredentialsSsoUsernameOK) GetPayload() *models.SsoUserDetailsResponse {
	return o.Payload
}

func (o *GetUsersUserIDCredentialsSsoUsernameOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SsoUserDetailsResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUsersUserIDCredentialsSsoUsernameBadRequest creates a GetUsersUserIDCredentialsSsoUsernameBadRequest with default headers values
func NewGetUsersUserIDCredentialsSsoUsernameBadRequest() *GetUsersUserIDCredentialsSsoUsernameBadRequest {
	return &GetUsersUserIDCredentialsSsoUsernameBadRequest{}
}

/*GetUsersUserIDCredentialsSsoUsernameBadRequest handles this case with default header values.

Bad Request
*/
type GetUsersUserIDCredentialsSsoUsernameBadRequest struct {
	Payload *models.APIError
}

func (o *GetUsersUserIDCredentialsSsoUsernameBadRequest) Error() string {
	return fmt.Sprintf("[GET /users/{user_id}/credentials/sso/{username}][%d] getUsersUserIdCredentialsSsoUsernameBadRequest  %+v", 400, o.Payload)
}

func (o *GetUsersUserIDCredentialsSsoUsernameBadRequest) GetPayload() *models.APIError {
	return o.Payload
}

func (o *GetUsersUserIDCredentialsSsoUsernameBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUsersUserIDCredentialsSsoUsernameUnauthorized creates a GetUsersUserIDCredentialsSsoUsernameUnauthorized with default headers values
func NewGetUsersUserIDCredentialsSsoUsernameUnauthorized() *GetUsersUserIDCredentialsSsoUsernameUnauthorized {
	return &GetUsersUserIDCredentialsSsoUsernameUnauthorized{}
}

/*GetUsersUserIDCredentialsSsoUsernameUnauthorized handles this case with default header values.

Authentication credentials were missing or incorrect
*/
type GetUsersUserIDCredentialsSsoUsernameUnauthorized struct {
	Payload *models.APIError
}

func (o *GetUsersUserIDCredentialsSsoUsernameUnauthorized) Error() string {
	return fmt.Sprintf("[GET /users/{user_id}/credentials/sso/{username}][%d] getUsersUserIdCredentialsSsoUsernameUnauthorized  %+v", 401, o.Payload)
}

func (o *GetUsersUserIDCredentialsSsoUsernameUnauthorized) GetPayload() *models.APIError {
	return o.Payload
}

func (o *GetUsersUserIDCredentialsSsoUsernameUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUsersUserIDCredentialsSsoUsernameForbidden creates a GetUsersUserIDCredentialsSsoUsernameForbidden with default headers values
func NewGetUsersUserIDCredentialsSsoUsernameForbidden() *GetUsersUserIDCredentialsSsoUsernameForbidden {
	return &GetUsersUserIDCredentialsSsoUsernameForbidden{}
}

/*GetUsersUserIDCredentialsSsoUsernameForbidden handles this case with default header values.

Forbidden
*/
type GetUsersUserIDCredentialsSsoUsernameForbidden struct {
	Payload *models.APIError
}

func (o *GetUsersUserIDCredentialsSsoUsernameForbidden) Error() string {
	return fmt.Sprintf("[GET /users/{user_id}/credentials/sso/{username}][%d] getUsersUserIdCredentialsSsoUsernameForbidden  %+v", 403, o.Payload)
}

func (o *GetUsersUserIDCredentialsSsoUsernameForbidden) GetPayload() *models.APIError {
	return o.Payload
}

func (o *GetUsersUserIDCredentialsSsoUsernameForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUsersUserIDCredentialsSsoUsernameNotFound creates a GetUsersUserIDCredentialsSsoUsernameNotFound with default headers values
func NewGetUsersUserIDCredentialsSsoUsernameNotFound() *GetUsersUserIDCredentialsSsoUsernameNotFound {
	return &GetUsersUserIDCredentialsSsoUsernameNotFound{}
}

/*GetUsersUserIDCredentialsSsoUsernameNotFound handles this case with default header values.

Record not found
*/
type GetUsersUserIDCredentialsSsoUsernameNotFound struct {
	Payload *models.APIError
}

func (o *GetUsersUserIDCredentialsSsoUsernameNotFound) Error() string {
	return fmt.Sprintf("[GET /users/{user_id}/credentials/sso/{username}][%d] getUsersUserIdCredentialsSsoUsernameNotFound  %+v", 404, o.Payload)
}

func (o *GetUsersUserIDCredentialsSsoUsernameNotFound) GetPayload() *models.APIError {
	return o.Payload
}

func (o *GetUsersUserIDCredentialsSsoUsernameNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUsersUserIDCredentialsSsoUsernameConflict creates a GetUsersUserIDCredentialsSsoUsernameConflict with default headers values
func NewGetUsersUserIDCredentialsSsoUsernameConflict() *GetUsersUserIDCredentialsSsoUsernameConflict {
	return &GetUsersUserIDCredentialsSsoUsernameConflict{}
}

/*GetUsersUserIDCredentialsSsoUsernameConflict handles this case with default header values.

Conflict
*/
type GetUsersUserIDCredentialsSsoUsernameConflict struct {
	Payload *models.APIError
}

func (o *GetUsersUserIDCredentialsSsoUsernameConflict) Error() string {
	return fmt.Sprintf("[GET /users/{user_id}/credentials/sso/{username}][%d] getUsersUserIdCredentialsSsoUsernameConflict  %+v", 409, o.Payload)
}

func (o *GetUsersUserIDCredentialsSsoUsernameConflict) GetPayload() *models.APIError {
	return o.Payload
}

func (o *GetUsersUserIDCredentialsSsoUsernameConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUsersUserIDCredentialsSsoUsernameTooManyRequests creates a GetUsersUserIDCredentialsSsoUsernameTooManyRequests with default headers values
func NewGetUsersUserIDCredentialsSsoUsernameTooManyRequests() *GetUsersUserIDCredentialsSsoUsernameTooManyRequests {
	return &GetUsersUserIDCredentialsSsoUsernameTooManyRequests{}
}

/*GetUsersUserIDCredentialsSsoUsernameTooManyRequests handles this case with default header values.

The request cannot be served due to the application’s rate limit
*/
type GetUsersUserIDCredentialsSsoUsernameTooManyRequests struct {
	Payload *models.APIError
}

func (o *GetUsersUserIDCredentialsSsoUsernameTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /users/{user_id}/credentials/sso/{username}][%d] getUsersUserIdCredentialsSsoUsernameTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetUsersUserIDCredentialsSsoUsernameTooManyRequests) GetPayload() *models.APIError {
	return o.Payload
}

func (o *GetUsersUserIDCredentialsSsoUsernameTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUsersUserIDCredentialsSsoUsernameInternalServerError creates a GetUsersUserIDCredentialsSsoUsernameInternalServerError with default headers values
func NewGetUsersUserIDCredentialsSsoUsernameInternalServerError() *GetUsersUserIDCredentialsSsoUsernameInternalServerError {
	return &GetUsersUserIDCredentialsSsoUsernameInternalServerError{}
}

/*GetUsersUserIDCredentialsSsoUsernameInternalServerError handles this case with default header values.

Internal Server Error
*/
type GetUsersUserIDCredentialsSsoUsernameInternalServerError struct {
	Payload *models.APIError
}

func (o *GetUsersUserIDCredentialsSsoUsernameInternalServerError) Error() string {
	return fmt.Sprintf("[GET /users/{user_id}/credentials/sso/{username}][%d] getUsersUserIdCredentialsSsoUsernameInternalServerError  %+v", 500, o.Payload)
}

func (o *GetUsersUserIDCredentialsSsoUsernameInternalServerError) GetPayload() *models.APIError {
	return o.Payload
}

func (o *GetUsersUserIDCredentialsSsoUsernameInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUsersUserIDCredentialsSsoUsernameServiceUnavailable creates a GetUsersUserIDCredentialsSsoUsernameServiceUnavailable with default headers values
func NewGetUsersUserIDCredentialsSsoUsernameServiceUnavailable() *GetUsersUserIDCredentialsSsoUsernameServiceUnavailable {
	return &GetUsersUserIDCredentialsSsoUsernameServiceUnavailable{}
}

/*GetUsersUserIDCredentialsSsoUsernameServiceUnavailable handles this case with default header values.

The server is up, but overloaded with requests. Try again later.
*/
type GetUsersUserIDCredentialsSsoUsernameServiceUnavailable struct {
	Payload *models.APIError
}

func (o *GetUsersUserIDCredentialsSsoUsernameServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /users/{user_id}/credentials/sso/{username}][%d] getUsersUserIdCredentialsSsoUsernameServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetUsersUserIDCredentialsSsoUsernameServiceUnavailable) GetPayload() *models.APIError {
	return o.Payload
}

func (o *GetUsersUserIDCredentialsSsoUsernameServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
