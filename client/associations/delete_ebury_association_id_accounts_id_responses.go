// Code generated by go-swagger; DO NOT EDIT.

package associations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/form3tech-oss/terraform-provider-form3/models"
)

// DeleteEburyAssociationIDAccountsIDReader is a Reader for the DeleteEburyAssociationIDAccountsID structure.
type DeleteEburyAssociationIDAccountsIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteEburyAssociationIDAccountsIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewDeleteEburyAssociationIDAccountsIDNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteEburyAssociationIDAccountsIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeleteEburyAssociationIDAccountsIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteEburyAssociationIDAccountsIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteEburyAssociationIDAccountsIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewDeleteEburyAssociationIDAccountsIDConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewDeleteEburyAssociationIDAccountsIDTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteEburyAssociationIDAccountsIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewDeleteEburyAssociationIDAccountsIDServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDeleteEburyAssociationIDAccountsIDNoContent creates a DeleteEburyAssociationIDAccountsIDNoContent with default headers values
func NewDeleteEburyAssociationIDAccountsIDNoContent() *DeleteEburyAssociationIDAccountsIDNoContent {
	return &DeleteEburyAssociationIDAccountsIDNoContent{}
}

/*DeleteEburyAssociationIDAccountsIDNoContent handles this case with default header values.

association account deleted successfully
*/
type DeleteEburyAssociationIDAccountsIDNoContent struct {
}

func (o *DeleteEburyAssociationIDAccountsIDNoContent) Error() string {
	return fmt.Sprintf("[DELETE /ebury/{association_id}/accounts/{id}][%d] deleteEburyAssociationIdAccountsIdNoContent ", 204)
}

func (o *DeleteEburyAssociationIDAccountsIDNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteEburyAssociationIDAccountsIDBadRequest creates a DeleteEburyAssociationIDAccountsIDBadRequest with default headers values
func NewDeleteEburyAssociationIDAccountsIDBadRequest() *DeleteEburyAssociationIDAccountsIDBadRequest {
	return &DeleteEburyAssociationIDAccountsIDBadRequest{}
}

/*DeleteEburyAssociationIDAccountsIDBadRequest handles this case with default header values.

Bad Request
*/
type DeleteEburyAssociationIDAccountsIDBadRequest struct {
	Payload *models.APIError
}

func (o *DeleteEburyAssociationIDAccountsIDBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /ebury/{association_id}/accounts/{id}][%d] deleteEburyAssociationIdAccountsIdBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteEburyAssociationIDAccountsIDBadRequest) GetPayload() *models.APIError {
	return o.Payload
}

func (o *DeleteEburyAssociationIDAccountsIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteEburyAssociationIDAccountsIDUnauthorized creates a DeleteEburyAssociationIDAccountsIDUnauthorized with default headers values
func NewDeleteEburyAssociationIDAccountsIDUnauthorized() *DeleteEburyAssociationIDAccountsIDUnauthorized {
	return &DeleteEburyAssociationIDAccountsIDUnauthorized{}
}

/*DeleteEburyAssociationIDAccountsIDUnauthorized handles this case with default header values.

Authentication credentials were missing or incorrect
*/
type DeleteEburyAssociationIDAccountsIDUnauthorized struct {
	Payload *models.APIError
}

func (o *DeleteEburyAssociationIDAccountsIDUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /ebury/{association_id}/accounts/{id}][%d] deleteEburyAssociationIdAccountsIdUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteEburyAssociationIDAccountsIDUnauthorized) GetPayload() *models.APIError {
	return o.Payload
}

func (o *DeleteEburyAssociationIDAccountsIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteEburyAssociationIDAccountsIDForbidden creates a DeleteEburyAssociationIDAccountsIDForbidden with default headers values
func NewDeleteEburyAssociationIDAccountsIDForbidden() *DeleteEburyAssociationIDAccountsIDForbidden {
	return &DeleteEburyAssociationIDAccountsIDForbidden{}
}

/*DeleteEburyAssociationIDAccountsIDForbidden handles this case with default header values.

Forbidden
*/
type DeleteEburyAssociationIDAccountsIDForbidden struct {
	Payload *models.APIError
}

func (o *DeleteEburyAssociationIDAccountsIDForbidden) Error() string {
	return fmt.Sprintf("[DELETE /ebury/{association_id}/accounts/{id}][%d] deleteEburyAssociationIdAccountsIdForbidden  %+v", 403, o.Payload)
}

func (o *DeleteEburyAssociationIDAccountsIDForbidden) GetPayload() *models.APIError {
	return o.Payload
}

func (o *DeleteEburyAssociationIDAccountsIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteEburyAssociationIDAccountsIDNotFound creates a DeleteEburyAssociationIDAccountsIDNotFound with default headers values
func NewDeleteEburyAssociationIDAccountsIDNotFound() *DeleteEburyAssociationIDAccountsIDNotFound {
	return &DeleteEburyAssociationIDAccountsIDNotFound{}
}

/*DeleteEburyAssociationIDAccountsIDNotFound handles this case with default header values.

Record not found
*/
type DeleteEburyAssociationIDAccountsIDNotFound struct {
	Payload *models.APIError
}

func (o *DeleteEburyAssociationIDAccountsIDNotFound) Error() string {
	return fmt.Sprintf("[DELETE /ebury/{association_id}/accounts/{id}][%d] deleteEburyAssociationIdAccountsIdNotFound  %+v", 404, o.Payload)
}

func (o *DeleteEburyAssociationIDAccountsIDNotFound) GetPayload() *models.APIError {
	return o.Payload
}

func (o *DeleteEburyAssociationIDAccountsIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteEburyAssociationIDAccountsIDConflict creates a DeleteEburyAssociationIDAccountsIDConflict with default headers values
func NewDeleteEburyAssociationIDAccountsIDConflict() *DeleteEburyAssociationIDAccountsIDConflict {
	return &DeleteEburyAssociationIDAccountsIDConflict{}
}

/*DeleteEburyAssociationIDAccountsIDConflict handles this case with default header values.

Conflict
*/
type DeleteEburyAssociationIDAccountsIDConflict struct {
	Payload *models.APIError
}

func (o *DeleteEburyAssociationIDAccountsIDConflict) Error() string {
	return fmt.Sprintf("[DELETE /ebury/{association_id}/accounts/{id}][%d] deleteEburyAssociationIdAccountsIdConflict  %+v", 409, o.Payload)
}

func (o *DeleteEburyAssociationIDAccountsIDConflict) GetPayload() *models.APIError {
	return o.Payload
}

func (o *DeleteEburyAssociationIDAccountsIDConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteEburyAssociationIDAccountsIDTooManyRequests creates a DeleteEburyAssociationIDAccountsIDTooManyRequests with default headers values
func NewDeleteEburyAssociationIDAccountsIDTooManyRequests() *DeleteEburyAssociationIDAccountsIDTooManyRequests {
	return &DeleteEburyAssociationIDAccountsIDTooManyRequests{}
}

/*DeleteEburyAssociationIDAccountsIDTooManyRequests handles this case with default header values.

The request cannot be served due to the applicationâ€™s rate limit
*/
type DeleteEburyAssociationIDAccountsIDTooManyRequests struct {
	Payload *models.APIError
}

func (o *DeleteEburyAssociationIDAccountsIDTooManyRequests) Error() string {
	return fmt.Sprintf("[DELETE /ebury/{association_id}/accounts/{id}][%d] deleteEburyAssociationIdAccountsIdTooManyRequests  %+v", 429, o.Payload)
}

func (o *DeleteEburyAssociationIDAccountsIDTooManyRequests) GetPayload() *models.APIError {
	return o.Payload
}

func (o *DeleteEburyAssociationIDAccountsIDTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteEburyAssociationIDAccountsIDInternalServerError creates a DeleteEburyAssociationIDAccountsIDInternalServerError with default headers values
func NewDeleteEburyAssociationIDAccountsIDInternalServerError() *DeleteEburyAssociationIDAccountsIDInternalServerError {
	return &DeleteEburyAssociationIDAccountsIDInternalServerError{}
}

/*DeleteEburyAssociationIDAccountsIDInternalServerError handles this case with default header values.

Internal Server Error
*/
type DeleteEburyAssociationIDAccountsIDInternalServerError struct {
	Payload *models.APIError
}

func (o *DeleteEburyAssociationIDAccountsIDInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /ebury/{association_id}/accounts/{id}][%d] deleteEburyAssociationIdAccountsIdInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteEburyAssociationIDAccountsIDInternalServerError) GetPayload() *models.APIError {
	return o.Payload
}

func (o *DeleteEburyAssociationIDAccountsIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteEburyAssociationIDAccountsIDServiceUnavailable creates a DeleteEburyAssociationIDAccountsIDServiceUnavailable with default headers values
func NewDeleteEburyAssociationIDAccountsIDServiceUnavailable() *DeleteEburyAssociationIDAccountsIDServiceUnavailable {
	return &DeleteEburyAssociationIDAccountsIDServiceUnavailable{}
}

/*DeleteEburyAssociationIDAccountsIDServiceUnavailable handles this case with default header values.

The server is up, but overloaded with requests. Try again later.
*/
type DeleteEburyAssociationIDAccountsIDServiceUnavailable struct {
	Payload *models.APIError
}

func (o *DeleteEburyAssociationIDAccountsIDServiceUnavailable) Error() string {
	return fmt.Sprintf("[DELETE /ebury/{association_id}/accounts/{id}][%d] deleteEburyAssociationIdAccountsIdServiceUnavailable  %+v", 503, o.Payload)
}

func (o *DeleteEburyAssociationIDAccountsIDServiceUnavailable) GetPayload() *models.APIError {
	return o.Payload
}

func (o *DeleteEburyAssociationIDAccountsIDServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
