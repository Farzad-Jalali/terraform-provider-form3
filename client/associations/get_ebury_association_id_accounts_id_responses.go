// Code generated by go-swagger; DO NOT EDIT.

package associations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/form3tech-oss/terraform-provider-form3/models"
)

// GetEburyAssociationIDAccountsIDReader is a Reader for the GetEburyAssociationIDAccountsID structure.
type GetEburyAssociationIDAccountsIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetEburyAssociationIDAccountsIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetEburyAssociationIDAccountsIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetEburyAssociationIDAccountsIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetEburyAssociationIDAccountsIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetEburyAssociationIDAccountsIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetEburyAssociationIDAccountsIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewGetEburyAssociationIDAccountsIDConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetEburyAssociationIDAccountsIDTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetEburyAssociationIDAccountsIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetEburyAssociationIDAccountsIDServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetEburyAssociationIDAccountsIDOK creates a GetEburyAssociationIDAccountsIDOK with default headers values
func NewGetEburyAssociationIDAccountsIDOK() *GetEburyAssociationIDAccountsIDOK {
	return &GetEburyAssociationIDAccountsIDOK{}
}

/*GetEburyAssociationIDAccountsIDOK handles this case with default header values.

Association Accounts details
*/
type GetEburyAssociationIDAccountsIDOK struct {
	Payload *models.EburyAssociationAccountResponse
}

func (o *GetEburyAssociationIDAccountsIDOK) Error() string {
	return fmt.Sprintf("[GET /ebury/{association_id}/accounts/{id}][%d] getEburyAssociationIdAccountsIdOK  %+v", 200, o.Payload)
}

func (o *GetEburyAssociationIDAccountsIDOK) GetPayload() *models.EburyAssociationAccountResponse {
	return o.Payload
}

func (o *GetEburyAssociationIDAccountsIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.EburyAssociationAccountResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetEburyAssociationIDAccountsIDBadRequest creates a GetEburyAssociationIDAccountsIDBadRequest with default headers values
func NewGetEburyAssociationIDAccountsIDBadRequest() *GetEburyAssociationIDAccountsIDBadRequest {
	return &GetEburyAssociationIDAccountsIDBadRequest{}
}

/*GetEburyAssociationIDAccountsIDBadRequest handles this case with default header values.

Bad Request
*/
type GetEburyAssociationIDAccountsIDBadRequest struct {
	Payload *models.APIError
}

func (o *GetEburyAssociationIDAccountsIDBadRequest) Error() string {
	return fmt.Sprintf("[GET /ebury/{association_id}/accounts/{id}][%d] getEburyAssociationIdAccountsIdBadRequest  %+v", 400, o.Payload)
}

func (o *GetEburyAssociationIDAccountsIDBadRequest) GetPayload() *models.APIError {
	return o.Payload
}

func (o *GetEburyAssociationIDAccountsIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetEburyAssociationIDAccountsIDUnauthorized creates a GetEburyAssociationIDAccountsIDUnauthorized with default headers values
func NewGetEburyAssociationIDAccountsIDUnauthorized() *GetEburyAssociationIDAccountsIDUnauthorized {
	return &GetEburyAssociationIDAccountsIDUnauthorized{}
}

/*GetEburyAssociationIDAccountsIDUnauthorized handles this case with default header values.

Authentication credentials were missing or incorrect
*/
type GetEburyAssociationIDAccountsIDUnauthorized struct {
	Payload *models.APIError
}

func (o *GetEburyAssociationIDAccountsIDUnauthorized) Error() string {
	return fmt.Sprintf("[GET /ebury/{association_id}/accounts/{id}][%d] getEburyAssociationIdAccountsIdUnauthorized  %+v", 401, o.Payload)
}

func (o *GetEburyAssociationIDAccountsIDUnauthorized) GetPayload() *models.APIError {
	return o.Payload
}

func (o *GetEburyAssociationIDAccountsIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetEburyAssociationIDAccountsIDForbidden creates a GetEburyAssociationIDAccountsIDForbidden with default headers values
func NewGetEburyAssociationIDAccountsIDForbidden() *GetEburyAssociationIDAccountsIDForbidden {
	return &GetEburyAssociationIDAccountsIDForbidden{}
}

/*GetEburyAssociationIDAccountsIDForbidden handles this case with default header values.

Forbidden
*/
type GetEburyAssociationIDAccountsIDForbidden struct {
	Payload *models.APIError
}

func (o *GetEburyAssociationIDAccountsIDForbidden) Error() string {
	return fmt.Sprintf("[GET /ebury/{association_id}/accounts/{id}][%d] getEburyAssociationIdAccountsIdForbidden  %+v", 403, o.Payload)
}

func (o *GetEburyAssociationIDAccountsIDForbidden) GetPayload() *models.APIError {
	return o.Payload
}

func (o *GetEburyAssociationIDAccountsIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetEburyAssociationIDAccountsIDNotFound creates a GetEburyAssociationIDAccountsIDNotFound with default headers values
func NewGetEburyAssociationIDAccountsIDNotFound() *GetEburyAssociationIDAccountsIDNotFound {
	return &GetEburyAssociationIDAccountsIDNotFound{}
}

/*GetEburyAssociationIDAccountsIDNotFound handles this case with default header values.

Record not found
*/
type GetEburyAssociationIDAccountsIDNotFound struct {
	Payload *models.APIError
}

func (o *GetEburyAssociationIDAccountsIDNotFound) Error() string {
	return fmt.Sprintf("[GET /ebury/{association_id}/accounts/{id}][%d] getEburyAssociationIdAccountsIdNotFound  %+v", 404, o.Payload)
}

func (o *GetEburyAssociationIDAccountsIDNotFound) GetPayload() *models.APIError {
	return o.Payload
}

func (o *GetEburyAssociationIDAccountsIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetEburyAssociationIDAccountsIDConflict creates a GetEburyAssociationIDAccountsIDConflict with default headers values
func NewGetEburyAssociationIDAccountsIDConflict() *GetEburyAssociationIDAccountsIDConflict {
	return &GetEburyAssociationIDAccountsIDConflict{}
}

/*GetEburyAssociationIDAccountsIDConflict handles this case with default header values.

Conflict
*/
type GetEburyAssociationIDAccountsIDConflict struct {
	Payload *models.APIError
}

func (o *GetEburyAssociationIDAccountsIDConflict) Error() string {
	return fmt.Sprintf("[GET /ebury/{association_id}/accounts/{id}][%d] getEburyAssociationIdAccountsIdConflict  %+v", 409, o.Payload)
}

func (o *GetEburyAssociationIDAccountsIDConflict) GetPayload() *models.APIError {
	return o.Payload
}

func (o *GetEburyAssociationIDAccountsIDConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetEburyAssociationIDAccountsIDTooManyRequests creates a GetEburyAssociationIDAccountsIDTooManyRequests with default headers values
func NewGetEburyAssociationIDAccountsIDTooManyRequests() *GetEburyAssociationIDAccountsIDTooManyRequests {
	return &GetEburyAssociationIDAccountsIDTooManyRequests{}
}

/*GetEburyAssociationIDAccountsIDTooManyRequests handles this case with default header values.

The request cannot be served due to the applicationâ€™s rate limit
*/
type GetEburyAssociationIDAccountsIDTooManyRequests struct {
	Payload *models.APIError
}

func (o *GetEburyAssociationIDAccountsIDTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /ebury/{association_id}/accounts/{id}][%d] getEburyAssociationIdAccountsIdTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetEburyAssociationIDAccountsIDTooManyRequests) GetPayload() *models.APIError {
	return o.Payload
}

func (o *GetEburyAssociationIDAccountsIDTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetEburyAssociationIDAccountsIDInternalServerError creates a GetEburyAssociationIDAccountsIDInternalServerError with default headers values
func NewGetEburyAssociationIDAccountsIDInternalServerError() *GetEburyAssociationIDAccountsIDInternalServerError {
	return &GetEburyAssociationIDAccountsIDInternalServerError{}
}

/*GetEburyAssociationIDAccountsIDInternalServerError handles this case with default header values.

Internal Server Error
*/
type GetEburyAssociationIDAccountsIDInternalServerError struct {
	Payload *models.APIError
}

func (o *GetEburyAssociationIDAccountsIDInternalServerError) Error() string {
	return fmt.Sprintf("[GET /ebury/{association_id}/accounts/{id}][%d] getEburyAssociationIdAccountsIdInternalServerError  %+v", 500, o.Payload)
}

func (o *GetEburyAssociationIDAccountsIDInternalServerError) GetPayload() *models.APIError {
	return o.Payload
}

func (o *GetEburyAssociationIDAccountsIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetEburyAssociationIDAccountsIDServiceUnavailable creates a GetEburyAssociationIDAccountsIDServiceUnavailable with default headers values
func NewGetEburyAssociationIDAccountsIDServiceUnavailable() *GetEburyAssociationIDAccountsIDServiceUnavailable {
	return &GetEburyAssociationIDAccountsIDServiceUnavailable{}
}

/*GetEburyAssociationIDAccountsIDServiceUnavailable handles this case with default header values.

The server is up, but overloaded with requests. Try again later.
*/
type GetEburyAssociationIDAccountsIDServiceUnavailable struct {
	Payload *models.APIError
}

func (o *GetEburyAssociationIDAccountsIDServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /ebury/{association_id}/accounts/{id}][%d] getEburyAssociationIdAccountsIdServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetEburyAssociationIDAccountsIDServiceUnavailable) GetPayload() *models.APIError {
	return o.Payload
}

func (o *GetEburyAssociationIDAccountsIDServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
