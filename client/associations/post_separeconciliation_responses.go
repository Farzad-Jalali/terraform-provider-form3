// Code generated by go-swagger; DO NOT EDIT.

package associations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/form3tech-oss/terraform-provider-form3/models"
)

// PostSepareconciliationReader is a Reader for the PostSepareconciliation structure.
type PostSepareconciliationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostSepareconciliationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 201:
		result := NewPostSepareconciliationCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewPostSepareconciliationBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewPostSepareconciliationForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 409:
		result := NewPostSepareconciliationConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPostSepareconciliationCreated creates a PostSepareconciliationCreated with default headers values
func NewPostSepareconciliationCreated() *PostSepareconciliationCreated {
	return &PostSepareconciliationCreated{}
}

/*PostSepareconciliationCreated handles this case with default header values.

creation response
*/
type PostSepareconciliationCreated struct {
	Payload *models.SepaReconciliationAssociationCreationResponse
}

func (o *PostSepareconciliationCreated) Error() string {
	return fmt.Sprintf("[POST /separeconciliation][%d] postSepareconciliationCreated  %+v", 201, o.Payload)
}

func (o *PostSepareconciliationCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SepaReconciliationAssociationCreationResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostSepareconciliationBadRequest creates a PostSepareconciliationBadRequest with default headers values
func NewPostSepareconciliationBadRequest() *PostSepareconciliationBadRequest {
	return &PostSepareconciliationBadRequest{}
}

/*PostSepareconciliationBadRequest handles this case with default header values.

Bad Request
*/
type PostSepareconciliationBadRequest struct {
	Payload *models.APIError
}

func (o *PostSepareconciliationBadRequest) Error() string {
	return fmt.Sprintf("[POST /separeconciliation][%d] postSepareconciliationBadRequest  %+v", 400, o.Payload)
}

func (o *PostSepareconciliationBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostSepareconciliationForbidden creates a PostSepareconciliationForbidden with default headers values
func NewPostSepareconciliationForbidden() *PostSepareconciliationForbidden {
	return &PostSepareconciliationForbidden{}
}

/*PostSepareconciliationForbidden handles this case with default header values.

Forbidden
*/
type PostSepareconciliationForbidden struct {
	Payload *models.APIError
}

func (o *PostSepareconciliationForbidden) Error() string {
	return fmt.Sprintf("[POST /separeconciliation][%d] postSepareconciliationForbidden  %+v", 403, o.Payload)
}

func (o *PostSepareconciliationForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostSepareconciliationConflict creates a PostSepareconciliationConflict with default headers values
func NewPostSepareconciliationConflict() *PostSepareconciliationConflict {
	return &PostSepareconciliationConflict{}
}

/*PostSepareconciliationConflict handles this case with default header values.

Conflict
*/
type PostSepareconciliationConflict struct {
	Payload *models.APIError
}

func (o *PostSepareconciliationConflict) Error() string {
	return fmt.Sprintf("[POST /separeconciliation][%d] postSepareconciliationConflict  %+v", 409, o.Payload)
}

func (o *PostSepareconciliationConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
