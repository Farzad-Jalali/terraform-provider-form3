// Code generated by go-swagger; DO NOT EDIT.

package associations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/form3tech-oss/terraform-provider-form3/models"
)

// PostEburyAssociationIDAccountsReader is a Reader for the PostEburyAssociationIDAccounts structure.
type PostEburyAssociationIDAccountsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostEburyAssociationIDAccountsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewPostEburyAssociationIDAccountsCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostEburyAssociationIDAccountsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostEburyAssociationIDAccountsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostEburyAssociationIDAccountsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostEburyAssociationIDAccountsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewPostEburyAssociationIDAccountsConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPostEburyAssociationIDAccountsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostEburyAssociationIDAccountsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPostEburyAssociationIDAccountsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPostEburyAssociationIDAccountsCreated creates a PostEburyAssociationIDAccountsCreated with default headers values
func NewPostEburyAssociationIDAccountsCreated() *PostEburyAssociationIDAccountsCreated {
	return &PostEburyAssociationIDAccountsCreated{}
}

/*PostEburyAssociationIDAccountsCreated handles this case with default header values.

creation response
*/
type PostEburyAssociationIDAccountsCreated struct {
	Payload *models.EburyAssociationAccountCreationResponse
}

func (o *PostEburyAssociationIDAccountsCreated) Error() string {
	return fmt.Sprintf("[POST /ebury/{association_id}/accounts][%d] postEburyAssociationIdAccountsCreated  %+v", 201, o.Payload)
}

func (o *PostEburyAssociationIDAccountsCreated) GetPayload() *models.EburyAssociationAccountCreationResponse {
	return o.Payload
}

func (o *PostEburyAssociationIDAccountsCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.EburyAssociationAccountCreationResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostEburyAssociationIDAccountsBadRequest creates a PostEburyAssociationIDAccountsBadRequest with default headers values
func NewPostEburyAssociationIDAccountsBadRequest() *PostEburyAssociationIDAccountsBadRequest {
	return &PostEburyAssociationIDAccountsBadRequest{}
}

/*PostEburyAssociationIDAccountsBadRequest handles this case with default header values.

Bad Request
*/
type PostEburyAssociationIDAccountsBadRequest struct {
	Payload *models.APIError
}

func (o *PostEburyAssociationIDAccountsBadRequest) Error() string {
	return fmt.Sprintf("[POST /ebury/{association_id}/accounts][%d] postEburyAssociationIdAccountsBadRequest  %+v", 400, o.Payload)
}

func (o *PostEburyAssociationIDAccountsBadRequest) GetPayload() *models.APIError {
	return o.Payload
}

func (o *PostEburyAssociationIDAccountsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostEburyAssociationIDAccountsUnauthorized creates a PostEburyAssociationIDAccountsUnauthorized with default headers values
func NewPostEburyAssociationIDAccountsUnauthorized() *PostEburyAssociationIDAccountsUnauthorized {
	return &PostEburyAssociationIDAccountsUnauthorized{}
}

/*PostEburyAssociationIDAccountsUnauthorized handles this case with default header values.

Authentication credentials were missing or incorrect
*/
type PostEburyAssociationIDAccountsUnauthorized struct {
	Payload *models.APIError
}

func (o *PostEburyAssociationIDAccountsUnauthorized) Error() string {
	return fmt.Sprintf("[POST /ebury/{association_id}/accounts][%d] postEburyAssociationIdAccountsUnauthorized  %+v", 401, o.Payload)
}

func (o *PostEburyAssociationIDAccountsUnauthorized) GetPayload() *models.APIError {
	return o.Payload
}

func (o *PostEburyAssociationIDAccountsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostEburyAssociationIDAccountsForbidden creates a PostEburyAssociationIDAccountsForbidden with default headers values
func NewPostEburyAssociationIDAccountsForbidden() *PostEburyAssociationIDAccountsForbidden {
	return &PostEburyAssociationIDAccountsForbidden{}
}

/*PostEburyAssociationIDAccountsForbidden handles this case with default header values.

Forbidden
*/
type PostEburyAssociationIDAccountsForbidden struct {
	Payload *models.APIError
}

func (o *PostEburyAssociationIDAccountsForbidden) Error() string {
	return fmt.Sprintf("[POST /ebury/{association_id}/accounts][%d] postEburyAssociationIdAccountsForbidden  %+v", 403, o.Payload)
}

func (o *PostEburyAssociationIDAccountsForbidden) GetPayload() *models.APIError {
	return o.Payload
}

func (o *PostEburyAssociationIDAccountsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostEburyAssociationIDAccountsNotFound creates a PostEburyAssociationIDAccountsNotFound with default headers values
func NewPostEburyAssociationIDAccountsNotFound() *PostEburyAssociationIDAccountsNotFound {
	return &PostEburyAssociationIDAccountsNotFound{}
}

/*PostEburyAssociationIDAccountsNotFound handles this case with default header values.

Record not found
*/
type PostEburyAssociationIDAccountsNotFound struct {
	Payload *models.APIError
}

func (o *PostEburyAssociationIDAccountsNotFound) Error() string {
	return fmt.Sprintf("[POST /ebury/{association_id}/accounts][%d] postEburyAssociationIdAccountsNotFound  %+v", 404, o.Payload)
}

func (o *PostEburyAssociationIDAccountsNotFound) GetPayload() *models.APIError {
	return o.Payload
}

func (o *PostEburyAssociationIDAccountsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostEburyAssociationIDAccountsConflict creates a PostEburyAssociationIDAccountsConflict with default headers values
func NewPostEburyAssociationIDAccountsConflict() *PostEburyAssociationIDAccountsConflict {
	return &PostEburyAssociationIDAccountsConflict{}
}

/*PostEburyAssociationIDAccountsConflict handles this case with default header values.

Conflict
*/
type PostEburyAssociationIDAccountsConflict struct {
	Payload *models.APIError
}

func (o *PostEburyAssociationIDAccountsConflict) Error() string {
	return fmt.Sprintf("[POST /ebury/{association_id}/accounts][%d] postEburyAssociationIdAccountsConflict  %+v", 409, o.Payload)
}

func (o *PostEburyAssociationIDAccountsConflict) GetPayload() *models.APIError {
	return o.Payload
}

func (o *PostEburyAssociationIDAccountsConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostEburyAssociationIDAccountsTooManyRequests creates a PostEburyAssociationIDAccountsTooManyRequests with default headers values
func NewPostEburyAssociationIDAccountsTooManyRequests() *PostEburyAssociationIDAccountsTooManyRequests {
	return &PostEburyAssociationIDAccountsTooManyRequests{}
}

/*PostEburyAssociationIDAccountsTooManyRequests handles this case with default header values.

The request cannot be served due to the applicationâ€™s rate limit
*/
type PostEburyAssociationIDAccountsTooManyRequests struct {
	Payload *models.APIError
}

func (o *PostEburyAssociationIDAccountsTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /ebury/{association_id}/accounts][%d] postEburyAssociationIdAccountsTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostEburyAssociationIDAccountsTooManyRequests) GetPayload() *models.APIError {
	return o.Payload
}

func (o *PostEburyAssociationIDAccountsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostEburyAssociationIDAccountsInternalServerError creates a PostEburyAssociationIDAccountsInternalServerError with default headers values
func NewPostEburyAssociationIDAccountsInternalServerError() *PostEburyAssociationIDAccountsInternalServerError {
	return &PostEburyAssociationIDAccountsInternalServerError{}
}

/*PostEburyAssociationIDAccountsInternalServerError handles this case with default header values.

Internal Server Error
*/
type PostEburyAssociationIDAccountsInternalServerError struct {
	Payload *models.APIError
}

func (o *PostEburyAssociationIDAccountsInternalServerError) Error() string {
	return fmt.Sprintf("[POST /ebury/{association_id}/accounts][%d] postEburyAssociationIdAccountsInternalServerError  %+v", 500, o.Payload)
}

func (o *PostEburyAssociationIDAccountsInternalServerError) GetPayload() *models.APIError {
	return o.Payload
}

func (o *PostEburyAssociationIDAccountsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostEburyAssociationIDAccountsServiceUnavailable creates a PostEburyAssociationIDAccountsServiceUnavailable with default headers values
func NewPostEburyAssociationIDAccountsServiceUnavailable() *PostEburyAssociationIDAccountsServiceUnavailable {
	return &PostEburyAssociationIDAccountsServiceUnavailable{}
}

/*PostEburyAssociationIDAccountsServiceUnavailable handles this case with default header values.

The server is up, but overloaded with requests. Try again later.
*/
type PostEburyAssociationIDAccountsServiceUnavailable struct {
	Payload *models.APIError
}

func (o *PostEburyAssociationIDAccountsServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /ebury/{association_id}/accounts][%d] postEburyAssociationIdAccountsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostEburyAssociationIDAccountsServiceUnavailable) GetPayload() *models.APIError {
	return o.Payload
}

func (o *PostEburyAssociationIDAccountsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
