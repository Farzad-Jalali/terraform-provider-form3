// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// PaymentSubmissionAttributes payment submission attributes
// swagger:model paymentSubmissionAttributes
type PaymentSubmissionAttributes struct {

	// limit breach end datetime
	// Read Only: true
	LimitBreachEndDatetime strfmt.DateTime `json:"limit_breach_end_datetime,omitempty"`

	// limit breach start datetime
	// Read Only: true
	LimitBreachStartDatetime strfmt.DateTime `json:"limit_breach_start_datetime,omitempty"`

	// redirected account number
	RedirectedAccountNumber string `json:"redirected_account_number,omitempty"`

	// redirected bank id
	RedirectedBankID string `json:"redirected_bank_id,omitempty"`

	// scheme status code
	SchemeStatusCode string `json:"scheme_status_code,omitempty"`

	// settlement cycle
	// Minimum: 0
	SettlementCycle *int64 `json:"settlement_cycle,omitempty"`

	// settlement date
	SettlementDate strfmt.Date `json:"settlement_date,omitempty"`

	// status
	Status PaymentSubmissionStatus `json:"status,omitempty"`

	// status reason
	StatusReason string `json:"status_reason,omitempty"`

	// submission datetime
	// Read Only: true
	SubmissionDatetime strfmt.DateTime `json:"submission_datetime,omitempty"`

	// transaction start datetime
	// Read Only: true
	TransactionStartDatetime strfmt.DateTime `json:"transaction_start_datetime,omitempty"`
}

// Validate validates this payment submission attributes
func (m *PaymentSubmissionAttributes) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateSettlementCycle(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateStatus(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *PaymentSubmissionAttributes) validateSettlementCycle(formats strfmt.Registry) error {

	if swag.IsZero(m.SettlementCycle) { // not required
		return nil
	}

	if err := validate.MinimumInt("settlement_cycle", "body", int64(*m.SettlementCycle), 0, false); err != nil {
		return err
	}

	return nil
}

func (m *PaymentSubmissionAttributes) validateStatus(formats strfmt.Registry) error {

	if swag.IsZero(m.Status) { // not required
		return nil
	}

	if err := m.Status.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("status")
		}
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *PaymentSubmissionAttributes) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *PaymentSubmissionAttributes) UnmarshalBinary(b []byte) error {
	var res PaymentSubmissionAttributes
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
