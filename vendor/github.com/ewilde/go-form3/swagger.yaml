swagger: '2.0'
info:
  version: "0.0.1"
  title: Form3 Corelib data structures.
host: api.form3.tech
schemes:
  - https
basePath: /v1
paths:

  /units:

    post:
      summary: Create organisation
      tags:
       - Organisations
      consumes:
        - application/vnd.api+json
        - application/json
      parameters:
        - name: Organisation creation request
          in: body
          schema:
            $ref: "#/definitions/OrganisationCreation"

      responses:
        201:
          description: Organisation creation response
          schema:
            $ref: "#/definitions/OrganisationCreationResponse"


    get:
      summary: List all organisations
      tags:
        - Organisations
      parameters:
        - name: filter[child_organisation_id]
          in: query
          description: Child org id
          required: false
          type: string
          format: uuid

      responses:
        200:
          description: List of organisation details
          schema:
            $ref: "#/definitions/OrganisationDetailsListResponse"


  /units/{id}:

    get:
      summary: Fetch organisation
      tags:
        - Organisations
      parameters:
        - name: id
          in: path
          description: Organisation Id
          required: true
          type: string
          format: uuid
      responses:
        200:
          description: Organisation details
          schema:
            $ref: "#/definitions/OrganisationDetailsResponse"

    delete:
      summary: Delete organisation
      tags:
        - Organisations
      consumes:
        - application/vnd.api+json
        - application/json
      parameters:
        - name: id
          in: path
          description: Organisation Id
          required: true
          type: string
          format: uuid
        - name: version
          in: query
          description: Version
          required: true
          type: integer
          minimum: 0
      responses:
        204:
          description: Organisation deleted

    patch:
      summary: Update organisation
      tags:
        - Organisations
      consumes:
        - application/vnd.api+json
        - application/json
      parameters:
        - name: id
          in: path
          description: Organisation Id
          required: true
          type: string
          format: uuid
        - name: Organisation update request
          in: body
          schema:
            $ref: "#/definitions/OrganisationUpdate"
      responses:
        200:
          description: Organisation details
          schema:
            $ref: "#/definitions/OrganisationDetailsResponse"

  /users:

    post:
      summary: Create user
      tags:
       - Users
      consumes:
        - application/vnd.api+json
        - application/json
      parameters:
        - name: User creation request
          in: body
          schema:
            $ref: "#/definitions/UserCreation"

      responses:
        201:
          description: User creation response
          schema:
            $ref: "#/definitions/UserCreationResponse"


    get:
      summary: List all users
      tags:
        - Users
      parameters:
        - name: page[number]
          in: query
          description: Which page to select
          required: false
          type: integer
          minimum: 0
        - name: page[size]
          in: query
          description: Number of items to select
          required: false
          type: integer
          minimum: 0
          maximum: 1000


      responses:
        200:
          description: List of user details
          schema:
            $ref: "#/definitions/UserDetailsListResponse"


  /users/{user_id}:

    get:
      summary: Fetch user
      tags:
        - Users
      parameters:
        - name: user_id
          in: path
          description: User Id
          required: true
          type: string
          format: uuid
      responses:
        200:
          description: User details
          schema:
            $ref: "#/definitions/UserDetailsResponse"

    patch:
      summary: Edit user details
      tags:
        - Users
      consumes:
        - application/vnd.api+json
        - application/json
      parameters:
        - name: user_id
          in: path
          description: User Id
          required: true
          type: string
          format: uuid
        - name: User update request
          in: body
          schema:
            $ref: "#/definitions/UserCreation"

      responses:
        200:
          description: User details
          schema:
            $ref: "#/definitions/UserDetailsResponse"

    delete:
      summary: Delete user
      tags:
        - Users
      consumes:
        - application/vnd.api+json
        - application/json
      parameters:
        - name: user_id
          in: path
          description: User Id
          required: true
          type: string
          format: uuid
        - name: version
          in: query
          description: Version
          required: true
          type: integer
          minimum: 0
      responses:
        204:
          description: User deleted


  /users/{user_id}/aces:

    get:
      summary: Get access control list for user
      tags:
        - Users
      parameters:
        - name: user_id
          in: path
          description: User Id
          required: true
          type: string
          format: uuid
        - name: filter[record_type]
          in: query
          description: Record type
          required: false
          type: string
          pattern: ^[A-Za-z]*$
        - name: filter[action]
          in: query
          description: Access action
          required: false
          type: string
          pattern: ^[A-Za-z]*$

      responses:
        200:
          description: List of access control entries for this user
          schema:
            $ref: "#/definitions/AceDetailsListResponse"

  /users/{user_id}/roles:

    get:
      summary: Get all roles for user
      tags:
        - Users
      parameters:
        - name: user_id
          in: path
          description: User Id
          required: true
          type: string
          format: uuid
      responses:
        200:
          description: List of roles for user
          schema:
            $ref: "#/definitions/UserRoleListResponse"

  /users/{user_id}/credentials:

    get:
      summary: Get all credentials for user
      tags:
        - Users
      parameters:
        - name: user_id
          in: path
          description: User Id
          required: true
          type: string
          format: uuid
      responses:
        200:
          description: List of credentials for user
          schema:
            $ref: "#/definitions/UserCredentialListResponse"

    post:
      summary: Add credentials to user
      tags:
        - Users
      consumes:
        - application/vnd.api+json
        - application/json
      parameters:
        - name: user_id
          in: path
          description: User Id
          required: true
          type: string
          format: uuid
      responses:
        201:
          description: Credential creation response
          schema:
            $ref: "#/definitions/CredentialCreationResponse"

  /users/{user_id}/credentials/{client_id}:

    delete:
      summary: Delete credential for user
      tags:
        - Users
      consumes:
        - application/vnd.api+json
        - application/json
      parameters:
        - name: user_id
          in: path
          description: User Id
          required: true
          type: string
          format: uuid
        - name: client_id
          in: path
          description: client id
          required: true
          type: string
          format: uuid
      responses:
        204:
          description: Credential deleted

  /users/{user_id}/roles/{role_id}:

    post:
      summary: Add role to user
      tags:
        - Users
      consumes:
        - application/vnd.api+json
        - application/json
      parameters:
        - name: user_id
          in: path
          description: User Id
          required: true
          type: string
          format: uuid
        - name: role_id
          in: path
          description: Role Id
          required: true
          type: string
          format: uuid
      responses:
        201:
          description: Role set OK

    delete:
      summary: Remove role from user
      tags:
        - Users
      consumes:
        - application/vnd.api+json
        - application/json
      parameters:
        - name: user_id
          in: path
          description: User Id
          required: true
          type: string
          format: uuid
        - name: role_id
          in: path
          description: Role Id
          required: true
          type: string
          format: uuid
      responses:
        204:
          description: User role deleted OK

  /roles:

    post:
      summary: Create role
      tags:
       - Roles
      consumes:
        - application/vnd.api+json
        - application/json
      parameters:
        - name: Role creation request
          in: body
          schema:
            $ref: "#/definitions/RoleCreation"

      responses:
        201:
          description: Role creation response
          schema:
            $ref: "#/definitions/RoleCreationResponse"


    get:
      summary: List all roles
      tags:
        - Roles
      parameters:
        - name: page[number]
          in: query
          description: Which page to select
          required: false
          type: integer
          minimum: 0
        - name: page[size]
          in: query
          description: Number of items to select
          required: false
          type: integer
          minimum: 0
          maximum: 1000

      responses:
        200:
          description: List of role details
          schema:
            $ref: "#/definitions/RoleDetailsListResponse"


  /roles/{role_id}:

    get:
      summary: Fetch role
      tags:
        - Roles
      parameters:
        - name: role_id
          in: path
          description: Role Id
          required: true
          type: string
          format: uuid
      responses:
        200:
          description: Role details
          schema:
            $ref: "#/definitions/RoleDetailsResponse"

    delete:
      summary: Delete role
      tags:
        - Roles
      parameters:
        - name: role_id
          in: path
          description: Role Id
          required: true
          type: string
          format: uuid
        - name: version
          in: query
          description: Version
          required: true
          type: integer
          minimum: 0
      responses:
        204:
          description: Role deleted

  /roles/{role_id}/aces:

    post:
      summary: Create Access Control Entry
      tags:
       - Ace
      consumes:
        - application/vnd.api+json
        - application/json
      parameters:
        - name: role_id
          in: path
          description: Role Id
          required: true
          type: string
          format: uuid
        - name: Ace creation request
          in: body
          schema:
            $ref: "#/definitions/AceCreation"

      responses:
        201:
          description: Ace creation response
          schema:
            $ref: "#/definitions/AceCreationResponse"


    get:
      summary: List all Access Controls for role
      tags:
        - Ace
      parameters:
        - name: role_id
          in: path
          description: Role Id
          required: true
          type: string
          format: uuid

      responses:
        200:
          description: List of Ace details
          schema:
            $ref: "#/definitions/AceDetailsListResponse"


  /roles/{role_id}/aces/{ace_id}:

    get:
      summary: Fetch Access Control Entry
      tags:
        - Ace
      parameters:
        - name: role_id
          in: path
          description: Role Id
          required: true
          type: string
          format: uuid
        - name: ace_id
          in: path
          description: Ace Id
          required: true
          type: string
          format: uuid
      responses:
        200:
          description: Ace details
          schema:
            $ref: "#/definitions/AceDetailsResponse"

    delete:
      summary: Delete Access Control Entry
      tags:
        - Ace
      consumes:
        - application/vnd.api+json
        - application/json
      parameters:
        - name: role_id
          in: path
          description: Role Id
          required: true
          type: string
          format: uuid
        - name: ace_id
          in: path
          description: Ace Id
          required: true
          type: string
          format: uuid
      responses:
        204:
          description: Ace deleted OK
  /subscriptions:

    post:
      summary: Create subscription
      tags:
       - Subscriptions
      consumes:
        - application/vnd.api+json
        - application/json
      parameters:
        - name: Subscription creation request
          in: body
          schema:
            $ref: "#/definitions/SubscriptionCreation"

      responses:
        201:
          description: Subscription creation response
          schema:
            $ref: "#/definitions/SubscriptionCreationResponse"


    get:
      summary: List all subscriptions
      parameters:
        - name: page[number]
          in: query
          description: Which page to select
          required: false
          type: integer
          minimum: 0
        - name: page[size]
          in: query
          description: Number of items to select
          required: false
          type: integer
          minimum: 0
          maximum: 1000
        - name: filter[event_type]
          in: query
          description: Filter by event type
          required: false
          type: array
          items:
            type: string
          collectionFormat: csv
      tags:
        - Subscriptions

      responses:
        200:
          description: List of subscription details
          schema:
            $ref: "#/definitions/SubscriptionDetailsListResponse"


  /subscriptions/{id}:

    get:
      summary: Fetch subscription
      tags:
        - Subscriptions
      parameters:
        - name: id
          in: path
          description: Subscription Id
          required: true
          type: string
          format: uuid
      responses:
        200:
          description: Subscription details
          schema:
            $ref: "#/definitions/SubscriptionDetailsResponse"

    patch:
      summary: Edit subscription details
      tags:
        - Subscriptions
      consumes:
        - application/vnd.api+json
        - application/json
      parameters:
        - name: id
          in: path
          description: Subscription Id
          required: true
          type: string
          format: uuid
        - name: Subscription update request
          in: body
          schema:
            $ref: "#/definitions/SubscriptionCreation"

      responses:
        200:
          description: Subscription details
          schema:
            $ref: "#/definitions/SubscriptionDetailsResponse"

    delete:
      summary: Deletes a subscription
      tags:
        - Subscriptions
      consumes:
        - application/vnd.api+json
        - application/json
      parameters:
        - name: id
          in: path
          description: Subscription Id
          required: true
          type: string
          format: uuid
        - name: version
          in: query
          description: Version
          required: true
          type: integer
          minimum: 0
      responses:
        204:
          description: Subscription deleted OK. No body content will be returned

  /starling:

     post:
       summary: Create organisation association
       tags:
        - Associations
       consumes:
         - application/vnd.api+json
         - application/json
       parameters:
         - name: creation request
           in: body
           schema:
             $ref: "#/definitions/AssociationCreation"

       responses:
         201:
           description: creation response
           schema:
             $ref: "#/definitions/AssociationCreationResponse"


     get:
       summary: List all organisation associations
       tags:
         - Associations
       parameters:
         - name: filter[organisation_id]
           in: query
           description: Organisation id
           required: false
           type: string
           format: uuid

       responses:
         200:
           description: List of associations
           schema:
             $ref: "#/definitions/AssociationDetailsListResponse"


  /starling/{id}:

     get:
       summary: Fetch organisation association
       tags:
         - Associations
       parameters:
         - name: id
           in: path
           description: Association Id
           required: true
           type: string
           format: uuid
       responses:
         200:
           description: Associations details
           schema:
             $ref: "#/definitions/AssociationDetailsResponse"

     delete:
       summary: Delete organisation association
       tags:
         - Associations
       parameters:
         - name: id
           in: path
           description: Association Id
           required: true
           type: string
           format: uuid
         - name: version
           in: query
           description: Version
           required: true
           type: integer
           minimum: 0
       responses:
         204:
           description: Association deleted
#organisation api - end

#account api -start
  /accounts:

    post:
      summary: Create account
      tags:
       - Accounts
      consumes:
        - application/vnd.api+json
        - application/json
      parameters:
        - name: Account creation request
          in: body
          schema:
            $ref: "#/definitions/AccountCreation"

      responses:
        201:
          description: Account creation response
          schema:
            $ref: "#/definitions/AccountCreationResponse"


    get:
      summary: List accounts
      tags:
        - Accounts
      parameters:
        - name: page[number]
          in: query
          description: Which page to select
          required: false
          type: integer
          minimum: 0
        - name: page[size]
          in: query
          description: Number of items to select
          required: false
          type: integer
          minimum: 0
          maximum: 1000
        - name: filter[organisation_id]
          in: query
          description: Filter by organisation id
          required: false
          type: array
          items:
            type: string
            format: uuid
          collectionFormat: csv
        - name: filter[bank_id_code]
          in: query
          description: Filter by type of bank id e.g. "GBDSC"
          required: false
          type: array
          items:
            type: string
          collectionFormat: csv
        - name: filter[bank_id]
          in: query
          description: Filter by bank id e.g. sort code or bic
          required: false
          type: array
          items:
            type: string
          collectionFormat: csv
        - name: filter[account_number]
          in: query
          description: Filter by account number
          required: false
          type: array
          items:
            type: string
          collectionFormat: csv
        - name: filter[country]
          in: query
          description: Filter by country e.g. FR,GB
          required: false
          type: array
          items:
            type: string
          collectionFormat: csv
        - name: filter[customer_id]
          in: query
          description: Filter by customer_id
          required: false
          type: array
          items:
            type: string
          collectionFormat: csv
        - name: filter[iban]
          in: query
          description: Filter by IBAN
          required: false
          type: array
          items:
            type: string
          collectionFormat: csv

      responses:
        200:
          description: List of account details
          schema:
            $ref: "#/definitions/AccountDetailsListResponse"


  /accounts/{id}:

    get:
      summary: Fetch account
      tags:
        - Accounts
      parameters:
        - name: id
          in: path
          description: Account Id
          required: true
          type: string
          format: uuid
      responses:
        200:
          description: Account details
          schema:
            $ref: "#/definitions/AccountDetailsResponse"

    delete:
      summary: Delete account
      tags:
        - Accounts
      parameters:
        - name: id
          in: path
          description: Account Id
          required: true
          type: string
          format: uuid
        - name: version
          in: query
          description: Version
          required: true
          type: integer
          minimum: 0
      responses:
        204:
          description: Account deleted


  /bankids:

    post:
      summary: Create bank id
      tags:
       - Accounts
      consumes:
        - application/vnd.api+json
        - application/json
      parameters:
        - name: BankId creation request
          in: body
          schema:
            $ref: "#/definitions/BankIdCreation"

      responses:
        201:
          description: BankId creation response
          schema:
            $ref: "#/definitions/BankIdCreationResponse"

    get:
      summary: List bankIds
      tags:
        - Accounts
      parameters:
        - name: page[number]
          in: query
          description: Which page to select
          required: false
          type: integer
          minimum: 0
        - name: page[size]
          in: query
          description: Number of items to select
          required: false
          type: integer
          minimum: 0
          maximum: 1000

      responses:
        200:
          description: List of bankId details
          schema:
            $ref: "#/definitions/BankIdDetailsListResponse"

  /bankids/{id}:

    get:
      summary: Fetch bankId
      tags:
        - Accounts
      parameters:
        - name: id
          in: path
          description: Bank Id
          required: true
          type: string
          format: uuid
      responses:
        200:
          description: BankId details
          schema:
            $ref: "#/definitions/BankIdDetailsResponse"

    delete:
      summary: Delete bankId
      tags:
        - Accounts
      parameters:
        - name: id
          in: path
          description: BankId Id
          required: true
          type: string
          format: uuid
        - name: version
          in: query
          description: Version
          required: true
          type: integer
          minimum: 0
      responses:
        204:
          description: BankId deleted

  /bics:

    post:
      summary: Create BIC
      tags:
       - Accounts
      consumes:
        - application/vnd.api+json
        - application/json
      parameters:
        - name: Bic creation request
          in: body
          schema:
            $ref: "#/definitions/BicCreation"

      responses:
        201:
          description: Bic creation response
          schema:
            $ref: "#/definitions/BicCreationResponse"

    get:
      summary: List bics
      tags:
        - Accounts
      parameters:
        - name: page[number]
          in: query
          description: Which page to select
          required: false
          type: integer
          minimum: 0
        - name: page[size]
          in: query
          description: Number of items to select
          required: false
          type: integer
          minimum: 0
          maximum: 1000

      responses:
        200:
          description: List of bic details
          schema:
            $ref: "#/definitions/BicDetailsListResponse"

  /bics/{id}:

    get:
      summary: Fetch Bic
      tags:
        - Accounts
      parameters:
        - name: id
          in: path
          description: Bic Id
          required: true
          type: string
          format: uuid
      responses:
        200:
          description: Bic details
          schema:
            $ref: "#/definitions/BicDetailsResponse"

    delete:
      summary: Delete BIC
      tags:
        - Accounts
      parameters:
        - name: id
          in: path
          description: Bic Id
          required: true
          type: string
          format: uuid
        - name: version
          in: query
          description: Version
          required: true
          type: integer
          minimum: 0
      responses:
        204:
          description: Bic deleted


  /accountconfigurations:

    post:
      summary: Create configuration
      tags:
       - Accounts
      consumes:
        - application/vnd.api+json
        - application/json
      parameters:
        - name: AccountConfiguration creation request
          in: body
          schema:
            $ref: "#/definitions/AccountConfigurationCreation"

      responses:
        201:
          description: AccountConfiguration creation response
          schema:
            $ref: "#/definitions/AccountConfigurationCreationResponse"

    get:
      summary: List configurations
      tags:
        - Accounts
      parameters:
        - name: page[number]
          in: query
          description: Which page to select
          required: false
          type: integer
          minimum: 0
        - name: page[size]
          in: query
          description: Number of items to select
          required: false
          type: integer
          minimum: 0
          maximum: 1000

      responses:
        200:
          description: List of configuration details
          schema:
            $ref: "#/definitions/AccountConfigurationDetailsListResponse"

  /accountconfigurations/{id}:

    get:
      summary: Fetch AccountConfiguration
      tags:
        - Accounts
      parameters:
        - name: id
          in: path
          description: AccountConfiguration Id
          required: true
          type: string
          format: uuid
      responses:
        200:
          description: AccountConfiguration details
          schema:
            $ref: "#/definitions/AccountConfigurationDetailsResponse"

    delete:
      summary: Delete config
      tags:
        - Accounts
      parameters:
        - name: id
          in: path
          description: AccountConfiguration Id
          required: true
          type: string
          format: uuid
        - name: version
          in: query
          description: Version
          required: true
          type: integer
          minimum: 0
      responses:
        204:
          description: AccountConfiguration deleted
#account api -end

definitions:

  ApiError:
    type: object
    properties:
      error_message:
        type: string
      error_code:
        type: string
        format: uuid

  Links:
    type: object
    properties:
      self:
        type: string
      first:
        type: string
      prev:
        type: string
      next:
        type: string
      last:
        type: string

  #Ace
  Ace:
    type: object
    properties:
      type:
        type: string
        pattern: ^[A-Za-z]*$
      id:
        type: string
        format: uuid
      version:
        type: integer
        minimum: 0
      organisation_id:
        type: string
        format: uuid
      attributes:
        type: object
        properties:
          role_id:
            type: string
            format: uuid
          action:
            type: string
            pattern: ^[A-Za-z]*$
          record_type:
            type: string
            pattern: ^[A-Za-z]*$
          filter:
            type: string

  AceDetailsListResponse:
    type: object
    properties:
      data:
        type: array
        items:
          $ref: '#/definitions/Ace'
      links:
        $ref: '#/definitions/Links'

  #Versioning, Audit and Approval
  #===

  ApprovalRequest:
    type: object
    properties:
      type:
        type: string
        pattern: ^[A-Za-z]*$
      id:
        type: string
        format: uuid
      version:
        type: integer
        minimum: 0
      organisation_id:
        type: string
        format: uuid
      attributes:
        type: object
        properties:
          record_type:
            type: string
            pattern: ^[A-Za-z]*$
          record_id:
            type: string
            format: uuid
          record_orgid:
            type: string
            format: uuid
          record_version:
            type: integer
            minimum: 0
          action:
            type: string
            pattern: ^[A-Za-z]*$
          status:
            type: string
            pattern: ^[A-Za-z]*$
          actioned_by:
            type: string
            format: uuid
          action_time:
            type: string
            format: 'date-time'
          before_data:
            type: object
          after_data:
            type: object

  ApprovalDetailsListResponse:
    type: object
    properties:
      data:
        type: array
        items:
          $ref: '#/definitions/ApprovalRequest'
      links:
        $ref: '#/definitions/Links'


  AuditEntry:
    type: object
    properties:
      type:
        type: string
        pattern: ^[A-Za-z]*$
      id:
        type: string
        format: uuid
      version:
        type: integer
        minimum: 0
      organisation_id:
        type: string
        format: uuid
      attributes:
        type: object
        properties:
          record_type:
            type: string
            pattern: ^[A-Za-z]*$
          record_id:
            type: string
            format: uuid
          actioned_by:
            type: string
            format: uuid
          action_time:
            type: string
            format: 'date-time'
          description:
            type: string
            pattern: ^[A-Za-z0-9 .,@:]*$
          before_data:
            type: object
          after_data:
            type: object

  SubscriptionAttributes:
    type: object
    properties:
      callback_uri:
        type: string
        pattern: ^[A-Za-z0-9 .,@:\/-_]*$
      callback_transport:
        type: string
        enum:
          - http
          - email
          - queue
      user_id:
        type: string
        format: uuid
        readOnly: true
      record_type:
        type: string
        pattern: ^[A-Za-z_-]*$
      event_type:
        type: string
        pattern: ^[A-Za-z_-]*$

  #Organisation records
  #===
  #These reflect Form³, customers on the platform, and their subentities
  Organisation:
    type: object
    properties:
      type:
        type: string
      id:
        type: string
        format: uuid
      version:
        type: integer
        minimum: 0
      organisation_id:
        type: string
        format: uuid
      attributes:
        $ref: "#/definitions/OrganisationAttributes"

  OrganisationAttributes:
    type: object
    properties:
      name:
        type: string

  OrganisationCreation:
    type: object
    properties:
      data:
        $ref: '#/definitions/Organisation'

  OrganisationUpdate:
    type: object
    properties:
      data:
        $ref: '#/definitions/Organisation'

  OrganisationCreationResponse:
    type: object
    properties:
      data:
        $ref: '#/definitions/Organisation'
      links:
        $ref: '#/definitions/Links'

  OrganisationDetailsResponse:
    type: object
    properties:
      data:
        $ref: '#/definitions/Organisation'
      links:
        $ref: '#/definitions/Links'

  OrganisationDetailsListResponse:
    type: object
    properties:
      data:
        type: array
        items:
          $ref: '#/definitions/Organisation'
      links:
        $ref: '#/definitions/Links'

  #Security info
  #===
  #User, role and security entries for individual users on the platform

  #User records
  User:
    type: object
    properties:
      type:
        type: string
      id:
        type: string
        format: uuid
      version:
        type: integer
        minimum: 0
      organisation_id:
        type: string
        format: uuid
      attributes:
        type: object
        properties:
          username:
            type: string
            pattern: ^[A-Za-z0-9-+@.]*$
          email:
            type: string
            pattern: ^[A-Za-z0-9-+@.]*$
          role_ids:
            type: array
            items:
              type: string
              format: uuid

  UserCreation:
    type: object
    properties:
      data:
        $ref: '#/definitions/User'

  UserCreationResponse:
    type: object
    properties:
      data:
        $ref: '#/definitions/User'
      links:
        $ref: '#/definitions/Links'

  UserDetailsResponse:
    type: object
    properties:
      data:
        $ref: '#/definitions/User'
      links:
        $ref: '#/definitions/Links'

  UserDetailsListResponse:
    type: object
    properties:
      data:
        type: array
        items:
          $ref: '#/definitions/User'
      links:
        $ref: '#/definitions/Links'


  #Roles
  Role:
    type: object
    properties:
      type:
        type: string
      id:
        type: string
        format: uuid
      version:
        type: integer
        minimum: 0
      organisation_id:
        type: string
        format: uuid
      attributes:
        $ref: "#/definitions/RoleAttributes"

  RoleAttributes:
    type: object
    properties:
      name:
        type: string

  RoleCreation:
    type: object
    properties:
      data:
        $ref: '#/definitions/Role'

  RoleCreationResponse:
    type: object
    properties:
      data:
        $ref: '#/definitions/Role'
      links:
        $ref: '#/definitions/Links'

  RoleDetailsResponse:
    type: object
    properties:
      data:
        $ref: '#/definitions/Role'
      links:
        $ref: '#/definitions/Links'

  RoleDetailsListResponse:
    type: object
    properties:
      data:
        type: array
        items:
          $ref: '#/definitions/Role'
      links:
        $ref: '#/definitions/Links'

  #Credential
  Credential:
    type: object
    properties:
      client_id:
        type: string
        format: uuid

  CredentialSecret:
    type: object
    properties:
      client_id:
        type: string
        format: uuid
      client_secret:
        type: string

  CredentialCreationResponse:
    type: object
    properties:
      data:
        $ref: '#/definitions/CredentialSecret'
      links:
        $ref: '#/definitions/Links'

  UserCredentialListResponse:
    type: object
    properties:
      data:
        type: array
        items:
          $ref: '#/definitions/Credential'
      links:
        $ref: '#/definitions/Links'

  #Ace
  AceCreation:
    type: object
    properties:
      data:
        $ref: '#/definitions/Ace'

  AceCreationResponse:
    type: object
    properties:
      data:
        $ref: '#/definitions/Ace'
      links:
        $ref: '#/definitions/Links'

  AceDetailsResponse:
    type: object
    properties:
      data:
        $ref: '#/definitions/Ace'
      links:
        $ref: '#/definitions/Links'

  UserRoleListResponse:
    type: object
    properties:
      data:
        type: array
        items:
          $ref: '#/definitions/Role'
      links:
        $ref: '#/definitions/Links'
  Subscription:
    type: object
    properties:
      type:
        type: string
        pattern: ^[A-Za-z]*$
      id:
        type: string
        format: uuid
      version:
        type: integer
        minimum: 0
      organisation_id:
        type: string
        format: uuid
      attributes:
        $ref: "#/definitions/SubscriptionAttributes"

  SubscriptionCreation:
    type: object
    properties:
      data:
        $ref: '#/definitions/Subscription'

  SubscriptionCreationResponse:
    type: object
    properties:
      data:
        $ref: '#/definitions/Subscription'
      links:
        $ref: '#/definitions/Links'

  SubscriptionDetailsResponse:
    type: object
    properties:
      data:
        $ref: '#/definitions/Subscription'
      links:
        $ref: '#/definitions/Links'

  SubscriptionDetailsListResponse:
    type: object
    properties:
      data:
        type: array
        items:
          $ref: '#/definitions/Subscription'
      links:
        $ref: '#/definitions/Links'

#Organisation->Associations

  Association:
      type: object
      properties:
        type:
          type: string
        id:
          type: string
          format: uuid
        version:
          type: integer
          minimum: 0
        organisation_id:
          type: string
          format: uuid
        attributes:
          $ref: "#/definitions/AssociationAttributes"

  NewAssociation:
    type: object
    properties:
      type:
        type: string
      id:
        type: string
        format: uuid
      version:
        type: integer
        minimum: 0
      organisation_id:
        type: string
        format: uuid
      attributes:
        $ref: "#/definitions/NewAssociationAttributes"

  NewAssociationAttributes:
    type: object
    properties:
      starling_account_name:
        type: string

  AssociationAttributes:
    type: object
    properties:
      starling_account_uid:
        type: string
        format: uuid
      starling_account_name:
        type: string

  AssociationCreation:
    type: object
    properties:
      data:
        $ref: '#/definitions/NewAssociation'

  AssociationCreationResponse:
    type: object
    properties:
      data:
        $ref: '#/definitions/Association'
      links:
        $ref: '#/definitions/Links'

  AssociationDetailsResponse:
    type: object
    properties:
      data:
        $ref: '#/definitions/Association'
      links:
        $ref: '#/definitions/Links'

  AssociationDetailsListResponse:
    type: object
    properties:
      data:
        type: array
        items:
          $ref: '#/definitions/Association'
      links:
        $ref: '#/definitions/Links'
# account api - start
  Account:
    type: object
    required:
      - id
      - organisation_id
      - attributes
    properties:
      type:
        type: string
        pattern: ^[A-Za-z]*$
      id:
        type: string
        format: uuid
      version:
        type: integer
        minimum: 0
      organisation_id:
        type: string
        format: uuid
      attributes:
        $ref: "#/definitions/AccountAttributes"

  AccountAttributes:
    type: object
    required:
      - country
    properties:
      country:
        type: string
        pattern: ^[A-Z]{2}$
      base_currency:
        type: string
        pattern: ^[A-Z]{3}$
      bank_id:
        type: string
        pattern: ^[A-Z0-9]{0,16}$
      bank_id_code:
        type: string
        pattern: ^[A-Z]{0,16}$
      account_number:
        type: string
        pattern: ^[A-Z0-9]{0,64}$
      customer_id:
        type: string
        pattern: ^[a-zA-Z0-9-$@., ]{0,256}$
      iban:
        type: string
        pattern: ^[A-Z]{2}[0-9]{2}[A-Z0-9]{0,64}$
      bic:
        type: string
        pattern: ^([A-Z]{6}[A-Z0-9]{2}|[A-Z]{6}[A-Z0-9]{5})$

  AccountCreation:
    type: object
    properties:
      data:
        $ref: '#/definitions/Account'

  AccountCreationResponse:
    type: object
    properties:
      data:
        $ref: '#/definitions/Account'
      links:
        $ref: '#/definitions/Links'

  AccountDetailsResponse:
    type: object
    properties:
      data:
        $ref: '#/definitions/Account'
      links:
        $ref: '#/definitions/Links'

  AccountDetailsListResponse:
    type: object
    properties:
      data:
        type: array
        items:
          $ref: '#/definitions/Account'
      links:
        $ref: '#/definitions/Links'

  BankId:
    type: object
    properties:
      type:
        type: string
        pattern: ^[A-Za-z]*$
      id:
        type: string
        format: uuid
      version:
        type: integer
        minimum: 0
      organisation_id:
        type: string
        format: uuid
      attributes:
        $ref: "#/definitions/BankIdAttributes"

  BankIdAttributes:
    type: object
    properties:
      country:
        type: string
        pattern: ^[A-Z]{2}$
      bank_id:
        type: string
        pattern: ^[A-Z0-9]{0,16}$
      bank_id_code:
        type: string
        pattern: ^[A-Z]{0,16}$

  BankIdCreation:
    type: object
    properties:
      data:
        $ref: '#/definitions/BankId'

  BankIdCreationResponse:
    type: object
    properties:
      data:
        $ref: '#/definitions/BankId'
      links:
        $ref: '#/definitions/Links'

  BankIdDetailsResponse:
    type: object
    properties:
      data:
        $ref: '#/definitions/BankId'
      links:
        $ref: '#/definitions/Links'

  BankIdDetailsListResponse:
    type: object
    properties:
      data:
        type: array
        items:
          $ref: '#/definitions/BankId'
      links:
        $ref: '#/definitions/Links'

  Bic:
    type: object
    properties:
      type:
        type: string
        pattern: ^[A-Za-z]*$
      id:
        type: string
        format: uuid
      version:
        type: integer
        minimum: 0
      organisation_id:
        type: string
        format: uuid
      attributes:
        $ref: "#/definitions/BicAttributes"

  BicAttributes:
    type: object
    properties:
      bic:
        type: string
        pattern: ^([A-Z]{6}[A-Z0-9]{2}|[A-Z]{6}[A-Z0-9]{5})$

  BicCreation:
    type: object
    properties:
      data:
        $ref: '#/definitions/Bic'

  BicCreationResponse:
    type: object
    properties:
      data:
        $ref: '#/definitions/Bic'
      links:
        $ref: '#/definitions/Links'

  BicDetailsResponse:
    type: object
    properties:
      data:
        $ref: '#/definitions/Bic'
      links:
        $ref: '#/definitions/Links'

  BicDetailsListResponse:
    type: object
    properties:
      data:
        type: array
        items:
          $ref: '#/definitions/Bic'
      links:
        $ref: '#/definitions/Links'

  AccountConfiguration:
    type: object
    properties:
      type:
        type: string
        pattern: ^[A-Za-z]*$
      id:
        type: string
        format: uuid
      version:
        type: integer
        minimum: 0
      organisation_id:
        type: string
        format: uuid
      attributes:
        $ref: "#/definitions/AccountConfigurationAttributes"

  AccountConfigurationAttributes:
    type: object
    properties:
      account_generation_enabled:
        type: boolean

  AccountConfigurationCreation:
    type: object
    properties:
      data:
        $ref: '#/definitions/AccountConfiguration'

  AccountConfigurationCreationResponse:
    type: object
    properties:
      data:
        $ref: '#/definitions/AccountConfiguration'
      links:
        $ref: '#/definitions/Links'

  AccountConfigurationDetailsResponse:
    type: object
    properties:
      data:
        $ref: '#/definitions/AccountConfiguration'
      links:
        $ref: '#/definitions/Links'

  AccountConfigurationDetailsListResponse:
    type: object
    properties:
      data:
        type: array
        items:
          $ref: '#/definitions/AccountConfiguration'
      links:
        $ref: '#/definitions/Links'
# account api - end
